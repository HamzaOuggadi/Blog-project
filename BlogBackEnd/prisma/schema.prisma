// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String 
  email String @unique
  password String
  role Role @default(AUTHOR)
  articles Article[]
  commentes Comment[]
  @@map("users")
}

model Article {
  id        Int      @id @default(autoincrement())
  title     String
  content   String   @db.Text
  image     String   @db.Text
  createdAt DateTime @updatedAt @default(now())
  updatedAt DateTime @updatedAt @default(now())
  published Boolean  @default(false)
  Author    User?    @relation(fields: [userId], references: [id])
  userId    Int?
  categories Category[]
  comments Comment[]
  @@map("articles")
}

model Category {
  id  Int @id @default(autoincrement())
  name String 
  articles Article[]
  // articles CategoriesOnArticles[]
  @@map("categories")
}

// model CategoriesOnArticles {
//   article    Article     @relation(fields: [articleId], references: [id])
//   articleId  Int
//   category   Category @relation(fields: [categoryId], references: [id])
//   categoryId Int

//   @@id([articleId, categoryId])
//   @@map("categories_articles")
// }

model Comment {
  id        Int @id @default(autoincrement())
  email     String //@unique
  content   String 
  Author    User?    @relation(fields: [userId], references: [id])
  userId    Int?
  article   Article?    @relation(fields: [articleId], references: [id])
  articleId Int?
  @@map("comments")
}

enum Role {
  ADMIN
  AUTHOR
}

model Post {
  id    Int    @id @default(autoincrement())
  title String
  tags  Tag[]
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[]
}

